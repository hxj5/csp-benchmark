#!/bin/bash
#Aim: to extract efficiency data (time and memory usage) from the 
#     log file of each run and then merge

set -e
set -o pipefail

if [ $# -lt 2 ]; then
  echo "" >&2
  echo "This script is aimed to extract efficiency data (time and memory" >&2
  echo "usage) from the log file of each run and then merge." >&2
  echo "" >&2
  echo "Usage: $0 <run dir> <efficiency file> [log filename] [dir pattern]" >&2
  echo "" >&2
  echo "<run dir> is the root dir containing several subdirs which are" >&2
  echo "  result dir of each tool_repeat_ncore, eg., cellsnp-lite_1_8" >&2
  echo "<efficiency file> is the output file, which would have" >&2
  echo "  6 columns: <app> <ncore> <repeat> <cpu_time> <wall_time> <memory>" >&2
  echo "[log filename] filename of log files containing time and memory" >&2
  echo "  usage info. default: run.err" >&2
  echo "[dir pattern] pattern used by grep to select target dirs. eg.," >&2
  echo "  ^cellsnp-lite would select dirs whose names start with cellsnp-lite" >&2
  echo "" >&2
  exit 1
fi
dir0=$1
perf=$2
log_fn=$3
dir_pattern=$4
if [ -z "$log_fn" ]; then log_fn=run.err; fi

set -u

perf_all=${perf}.all
echo -e "app\tncore\trepeat\tcpu_time\twall_time\tmemory" > $perf
echo -e "app\tncore\trepeat\twall_time1\tmemory1\twall_time2\tmemory2\tcpu_user_time\tcpu_sys_time" > $perf_all

dir_lst=`ls $dir0`
if [ -n "$dir_pattern" ]; then
  dir_lst=`ls $dir0 | tr ' ' '\n' | grep $dir_pattern` 
fi

nline=50
for dir in $dir_lst; do
  if [ ! -d "$dir0/$dir" ]; then continue; fi
  app=`echo $dir | cut -d_ -f1`
  repeat=`echo $dir | cut -d_ -f2`
  ncore=`echo $dir | cut -d_ -f3`

  # extract efficiency info generated by /usr/bin/time and memusg
  log=$dir0/$dir/$log_fn
  wall_time1=`cat $log | tail -n $nline | \
              grep -E '^elapsed time: [0-9.]+$' | awk '{print $NF}'`
  rss1=`cat $log | tail -n $nline | \
        grep -E '^peak rss: [0-9.]+$' | awk '{print $NF}'`
  wall_time2=`cat $log | tail -n $nline | \
              grep -E 'm:ss\): [0-9:.]+$' | awk '{print $NF}'`
  rss2=`cat $log | tail -n $nline | \
        grep -E 'Maximum resident set size \(kbytes\): [0-9.]+$' | awk '{print $NF}'`
  user_time=`cat $log | tail -n $nline | \
             grep -E 'User time \(seconds\): [0-9.]+$' | awk '{print $NF}'`
  sys_time=`cat $log | tail -n $nline | \
             grep -E 'System time \(seconds\): [0-9.]+$' | awk '{print $NF}'`

  echo -e "$app\t$ncore\t$repeat\t$user_time\t$wall_time1\t$rss1" >> $perf
  echo -e "$app\t$ncore\t$repeat\t$wall_time1\t$rss1\t$wall_time2\t$rss2\t$user_time\t$sys_time" >> $perf_all
  
done

